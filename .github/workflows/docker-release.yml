name: Aliyun Image CI/CD

on:
  push:
    branches: ["release", "test"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Build Binaries for All Architectures
        run: |
          mkdir -p bin/amd64 bin/arm64 bin/arm
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bin/amd64/main ./api/main.go
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bin/arm64/main ./api/main.go
          GOOS=linux GOARCH=arm CGO_ENABLED=0 go build -o bin/arm/main ./api/main.go

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to Aliyun ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and Push Multi-Arch (No Compile Inside Docker)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/${{ secrets.ALIYUN_REPO_NAME }}:latest
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/${{ secrets.ALIYUN_REPO_NAME }}:${{ github.sha }}
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/${{ secrets.ALIYUN_REPO_NAME }}:${{ github.run_number }}
          build-args: |
            TARGETARCH
          provenance: false
